name: Build standings from Google Sheets

on:
  schedule:
    - cron: "*/15 * * * *"   # every 15 minutes
  workflow_dispatch:          # allow manual run
  push:
    paths:
      - .github/workflows/build-standings.yml

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Generate data/standings.js from CSV
        run: |
          mkdir -p data
          python3 - << 'PY'
          import csv, io, json, urllib.request

          CSV_URL = "https://docs.google.com/spreadsheets/d/e/2PACX-1vTxW6zuoPjfDDf45S2RII9krWfSpybm-QEWx5_jeF9hYF5Do2Ax-OQNVvbDv4FYlRuoyRySHFTGdgVb/pub?gid=870919127&single=true&output=csv"

          data = urllib.request.urlopen(CSV_URL).read().decode("utf-8")
          rows = list(csv.reader(io.StringIO(data)))
          if not rows:
              raise SystemExit("Empty CSV")

          # Find right-hand table start: POS + Team/Equipo
          header = [h.strip() for h in rows[0]]
          upper = [h.upper() for h in header]
          width = 10  # POS, Team, PJ, G, E, P, GF, GC, DIF, PTS (no H2H)
          start = -1
          for i in range(len(upper)-1):
              if upper[i] == "POS" and upper[i+1] in ("TEAM","EQUIPO"):
                  start = i
                  break
          if start == -1:
              start = max(0, len(header) - width)

          right_header = header[start:start+width]
          right_rows = [
              [c.strip() for c in r[start:start+width]]
              for r in rows[1:]
              if any(cell.strip() for cell in r[start:start+width])
          ]

          # Top 8 slim: POS, Team, PJ, G, E, P, PTS
          def col(name):
              return right_header.index(name)
          POS, TEAM = col("POS"), col("Team") if "Team" in right_header else col("Equipo")
          PJ, G, E, P = col("PJ"), col("G"), col("E"), col("P")
          PTS = col("PTS")

          top8 = [
              [r[POS], r[TEAM], r[PJ], r[G], r[E], r[P], r[PTS]]
              for r in right_rows[:8]
          ]

          out = "// Auto-generated by GitHub Actions. Do not edit.\n"
          out += "window.STANDINGS = " + json.dumps(
              {"header": right_header, "rows": right_rows},
              ensure_ascii=False
          ) + ";\n"
          out += "window.TOP8 = " + json.dumps(top8, ensure_ascii=False) + ";\n"

          with open("data/standings.js", "w", encoding="utf-8") as f:
              f.write(out)
          print("Wrote data/standings.js")
          PY

      - name: Commit and push
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add data/standings.js
            git commit -m "chore: update standings.js from Google Sheets"
            git push
          else
            echo "No changes to commit"
          fi
